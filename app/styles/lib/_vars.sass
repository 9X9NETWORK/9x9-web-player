@charset "UTF-8"

//global setting
//$susy: (columns: 12, gutters: 1, math: fluid, output: float, gutter-position: inside, debug: (image: show,color: rgba(#66f, .25),   output: overlay,toggle: top right))
$susy: (columns: 12, gutters: 1, math: fluid, output: float, gutter-position: inside)
//$desktop-layout: layout(columns: 16,column-width: 4rem ,gutters: 1,math: static, container-position: center)
$desktop-layout: layout( 16 (4rem 1rem) static center)

//$symmetrical: (columns: 12, gutters: 1/4,)
//$asymmetrical: ( columns: (1 3 4 6 2),  gutters: .5,)


////demo
// $map: (
//   columns: 12,
//   gutters: 1/4,
//   math: fluid,
//   output: float,
//   gutter-position: inside,
// );
//
////shorthand
//$map:: 12 1/4 fluid float inside;



//color
$basic-bgcolor: rgb(29,29,29)
$link-color: #f0871c



//basic-font-family
$basic-font-family: Arial, Helvetica, "Myriad Pro", "Hiragino Kaku Gothic Pro", "微軟正黑體", "Microsoft JhengHei", "Hiragino Sans GB", "Lihei Pro", "Droid Sans allback", Sans-serif

//font-size-setting
$huge-font: 20px
$large-font: 15px
$small-font: 13px
$tiny-font: 10px


$base-font-size: 16px
$base-line-height: 24px

=quickbutton($covercolor,$fontcolor: #fff,$fontsize: $huge-font )
    +box-shadow(0 0.3125rem 0 0 shade($covercolor,20%))
    background-color: $covercolor
    border-radius: 0.3125rem
    display: inline-block
    cursor: pointer
    color: $fontcolor
    //font-weight: bold
    font-size: $fontsize
    text-decoration: none
    //text-shadow: 0px 1px 0px #ffee66
    padding: 0.5rem 1.5rem
    &:hover
        background-color: scale-lightness($covercolor,15)


    &:active
        box-shadow: none
        position: relative
        top: 0.3125rem
    
=animationfull($animations...)  
    $name: fade-In
    $duration: 1s
    $function: ease
    $delay: 0s
    $count: 1
    $direction: normal
    $mode: both
    //$state: running
    $total_list: length($animations)
    $defualt_v: ($name $duration $function $delay $count $direction $mode)
    $defualt_length: length($defualt_v)
    $final_list: ()
    @for $i from 1 through $total_list
        $temp_a: nth($animations,$i)
        $temp_l: length($temp_a)
        //$temp_d: $defualt_length - $temp_l
        @if $temp_l< $defualt_length
            @for $k from ($temp_l+1) through $defualt_length
                $temp_a: append($temp_a,nth($defualt_v,$k),"space")
        $final_list: append($final_list,$temp_a,"comma")
    +experimental(animation, $final_list)
 

=keyframes($keyframes-name)
    @-moz-keyframes #{$keyframes-name}
        @content
    @-webkit-keyframes #{$keyframes-name}
        @content
    @-ms-keyframes #{$keyframes-name}
        @content
    @keyframes #{$keyframes-name}
        @content

    